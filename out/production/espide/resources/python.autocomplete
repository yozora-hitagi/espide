import 
import network
import time
import Timer
from machine import Pin
from machine import Pin, PWM
from machine import ADC
from machine import Pin, SPI
from machine import Pin, I2C
import onewire
from neopixel import NeoPixel
import neopixel
import esp
json
ubinascii.hexlify(data[, sep])
ubinascii.unhexlify(data)
ubinascii.a2b_base64(data)
ubinascii.b2a_base64(data)
machine.freq(160000000)
esp.osdebug(None)
esp.osdebug(0)
wlan = network.WLAN(network.STA_IF)
wlan.active(True)
wlan.scan()
wlan.isconnected()
wlan.connect('essid', 'password')
wlan.ifconfig()
ap = network.WLAN(network.AP_IF)
ap.active(True)
ap.config(essid='ESP-AP')
time.sleep(1)
time.sleep_ms(500)
time.sleep_us(10)
time.ticks_diff(start, time.ticks_ms())
tim = Timer(-1)
tim.init(period=5000, mode=Timer.ONE_SHOT, callback=lambda t:print(1))
tim.init(period=2000, mode=Timer.PERIODIC, callback=lambda t:print(2))
Pin(0, Pin.OUT)
.high()
.low()
.value(1)
Pin(2, Pin.IN)
Pin(4, Pin.IN, Pin.PULL_UP)
Pin(5, Pin.OUT, value=1)
PWM(Pin(0))
.freq()
.freq(1000)
.duty()
.duty(200)
.deinit()
PWM(Pin(2), freq=500, duty=512)
ADC(0)
.read()
SPI(baudrate=100000, polarity=1, phase=0, sck=Pin(0), mosi=Pin(2), miso=Pin(4))
.init(baudrate=200000)
.readinto(buf)
.write_readinto(b'1234', buf)
.write_readinto(buf, buf)
I2C(scl=Pin(5), sda=Pin(4), freq=100000)
machine.RTC()
.irq(trigger=rtc.ALARM0, wake=machine.DEEPSLEEP)
machine.reset_cause()
machine.DEEPSLEEP_RESET
rtc.alarm(rtc.ALARM0, 10000)
.scan()
.reset()
onewire.DS18B20(ow)
.start_measure()
.get_temp(rom)
NeoPixel(pin, 8)